basePath: /api
definitions:
  github_com_naufalfazanadi_finance-manager-go_internal_dto.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.CreateUserRequest:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: John Doe
        maxLength: 100
        minLength: 2
        type: string
      password:
        example: password123
        maxLength: 100
        minLength: 8
        type: string
      role:
        enum:
        - user
        - admin
        example: user
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse:
    properties:
      details:
        additionalProperties: true
        type: object
      error:
        example: Bad Request
        type: string
      message:
        example: Invalid input data
        type: string
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.PaginationMeta:
    properties:
      limit:
        example: 10
        type: integer
      page:
        example: 1
        type: integer
      total:
        example: 100
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: John Doe
        maxLength: 100
        minLength: 2
        type: string
      password:
        example: password123
        maxLength: 100
        minLength: 8
        type: string
      role:
        enum:
        - user
        - admin
        example: user
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.UpdateUserRequest:
    properties:
      name:
        example: John Doe Updated
        maxLength: 100
        minLength: 2
        type: string
    type: object
  github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      name:
        example: John Doe
        type: string
      role:
        example: user
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: naufalfazanadi@example.com
    name: API Support
  description: This is a finance manager API server built with Go and Fiber framework.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Finance Manager API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /v1/auth/profile:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, name, and password
      parameters:
      - description: Registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /v1/users:
    get:
      consumes:
      - application/json
      description: Get all users with pagination and filtering. Returns users array
        in data field and pagination info in meta field.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search term for name or email
        in: query
        name: search
        type: string
      - description: Field to sort by (name, email, created_at)
        in: query
        name: sort_by
        type: string
      - default: asc
        description: Sort direction (asc, desc)
        in: query
        name: sort_dir
        type: string
      - description: Filter by exact name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
                type: array
              message:
                type: string
              meta:
                $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.PaginationMeta'
              success:
                type: boolean
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with email, name, and password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID (Admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      - application/json
      description: |-
        Update user information
        Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_naufalfazanadi_finance-manager-go_internal_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - users
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
